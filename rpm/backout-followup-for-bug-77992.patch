diff --git a/src/qgraphicsmozview_p.cpp b/src/qgraphicsmozview_p.cpp
index 160117a..ebb917c 100644
--- a/src/qgraphicsmozview_p.cpp
+++ b/src/qgraphicsmozview_p.cpp
@@ -17,7 +17,6 @@
 #include "mozilla/gfx/Tools.h"
 #include "qmozembedlog.h"
 #include <sys/time.h>
-#include "mozilla/TimeStamp.h"
 
 #ifndef MOZVIEW_FLICK_THRESHOLD
 #define MOZVIEW_FLICK_THRESHOLD 200
@@ -603,9 +602,9 @@ void QGraphicsMozViewPrivate::touchEvent(QTouchEvent* event)
     }
 
     qint64 timeStamp = current_timestamp(event);
-    MultiTouchInput meventStart(MultiTouchInput::MULTITOUCH_START, timeStamp, TimeStamp(), 0);
-    MultiTouchInput meventMove(MultiTouchInput::MULTITOUCH_MOVE, timeStamp, TimeStamp(), 0);
-    MultiTouchInput meventEnd(MultiTouchInput::MULTITOUCH_END, timeStamp, TimeStamp(), 0);
+    MultiTouchInput meventStart(MultiTouchInput::MULTITOUCH_START, timeStamp, 0);
+    MultiTouchInput meventMove(MultiTouchInput::MULTITOUCH_MOVE, timeStamp, 0);
+    MultiTouchInput meventEnd(MultiTouchInput::MULTITOUCH_END, timeStamp, 0);
 
     // Add active touch point to cancelled touch sequence.
     if (event->type() == QEvent::TouchCancel && touchPointsCount == 0) {
diff --git a/src/quickmozview.cpp b/src/quickmozview.cpp
index fe033f3..cf0677b 100644
--- a/src/quickmozview.cpp
+++ b/src/quickmozview.cpp
@@ -12,7 +12,6 @@
 #include "mozilla/embedlite/EmbedLiteView.h"
 #include "mozilla/embedlite/EmbedLiteApp.h"
 #include "mozilla/embedlite/EmbedLiteRenderTarget.h"
-#include "mozilla/TimeStamp.h"
 
 #include <QTimer>
 #include <QThread>
@@ -702,7 +701,7 @@ void QuickMozView::synthTouchBegin(const QVariant& touches)
 {
     QList<QVariant> list = touches.toList();
     MultiTouchInput meventStart(MultiTouchInput::MULTITOUCH_START,
-                                QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                                QDateTime::currentMSecsSinceEpoch(), 0);
     int ptId = 0;
     for(QList<QVariant>::iterator it = list.begin(); it != list.end(); it++)
     {
@@ -722,7 +721,7 @@ void QuickMozView::synthTouchMove(const QVariant& touches)
 {
     QList<QVariant> list = touches.toList();
     MultiTouchInput meventStart(MultiTouchInput::MULTITOUCH_MOVE,
-                                QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                                QDateTime::currentMSecsSinceEpoch(), 0);
     int ptId = 0;
     for(QList<QVariant>::iterator it = list.begin(); it != list.end(); it++)
     {
@@ -742,7 +741,7 @@ void QuickMozView::synthTouchEnd(const QVariant& touches)
 {
     QList<QVariant> list = touches.toList();
     MultiTouchInput meventStart(MultiTouchInput::MULTITOUCH_END,
-                                QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                                QDateTime::currentMSecsSinceEpoch(), 0);
     int ptId = 0;
     for(QList<QVariant>::iterator it = list.begin(); it != list.end(); it++)
     {
@@ -785,7 +784,7 @@ void QuickMozView::recvMouseMove(int posX, int posY)
 {
     if (d->mViewInitialized && !d->mPendingTouchEvent) {
         MultiTouchInput event(MultiTouchInput::MULTITOUCH_MOVE,
-                              QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                              QDateTime::currentMSecsSinceEpoch(), 0);
         event.mTouches.AppendElement(SingleTouchData(0,
                                      mozilla::ScreenIntPoint(posX, posY),
                                      mozilla::ScreenSize(1, 1),
@@ -800,7 +799,7 @@ void QuickMozView::recvMousePress(int posX, int posY)
     forceViewActiveFocus();
     if (d->mViewInitialized && !d->mPendingTouchEvent) {
         MultiTouchInput event(MultiTouchInput::MULTITOUCH_START,
-                              QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                              QDateTime::currentMSecsSinceEpoch(), 0);
         event.mTouches.AppendElement(SingleTouchData(0,
                                      mozilla::ScreenIntPoint(posX, posY),
                                      mozilla::ScreenSize(1, 1),
@@ -814,7 +813,7 @@ void QuickMozView::recvMouseRelease(int posX, int posY)
 {
     if (d->mViewInitialized && !d->mPendingTouchEvent) {
         MultiTouchInput event(MultiTouchInput::MULTITOUCH_END,
-                              QDateTime::currentMSecsSinceEpoch(), TimeStamp(), 0);
+                              QDateTime::currentMSecsSinceEpoch(), 0);
         event.mTouches.AppendElement(SingleTouchData(0,
                                      mozilla::ScreenIntPoint(posX, posY),
                                      mozilla::ScreenSize(1, 1),
